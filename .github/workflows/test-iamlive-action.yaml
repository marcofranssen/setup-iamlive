name: Test iamlive action
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-dist:
    name: Check dist
    runs-on: ubuntu-22.04

    permissions:
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v3.0.2

      - name: Setup Node
        uses: actions/setup-node@v3.4.1
        with:
          node-version: '16'

      - name: Setup yarn
        run: npm install --location=global yarn

      - name: Install dependencies
        run: yarn install

      - name: Check diff is up to date
        run: |
          yarn build
          git diff --quiet -- dist || {
            echo "::error::The ./dist is outdated, run 'yarn build' and commit"
            exit 1
          }

  utilize:
    name: Use iamlive action
    runs-on: ubuntu-22.04

    needs: [check-dist]

    permissions:
      contents: read

    env:
      AWS_CSM_ENABLED: 'true'

    steps:
      - name: Check out code
        uses: actions/checkout@v3.0.2

      - name: Setup Node
        uses: actions/setup-node@v3.4.1
        with:
          node-version: '16'

      - name: Setup Python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: '3.x'

      - name: Setup iamlive
        id: setup-iamlive
        uses: ./
        with:
          iamlive-version: v0.48.0
          auto-capture: true
          output-file: ./test-policy.json

      - name: Check output and installPath
        run: |
          [ "${IAMLIVE_VERSION}" == v0.48.0 ] || { echo >&2 "::error::Expected v0.48.0 to be installed."; }
          hash iamlive 2>/dev/null || { echo >&2 "iamlive can not be found in the PATH."; exit 1; }

          echo "::notice::Installed iamlive ${IAMLIVE_VERSION} at $(which iamlive)"
        env:
          IAMLIVE_VERSION: ${{ steps.setup-iamlive.outputs.iamlive-version }}

      - name: Setup LocalStack
        run: |
          pip install localstack awscli-local[ver1]
          docker pull localstack/localstack
          localstack start -d
          echo "Waiting for LocalStack startup..."
          localstack wait -t 30
          echo "Startup complete"

      - name: Call a bunch of aws apis
        run: |
          awslocal s3 mb s3://test
          awslocal s3 ls

      - name: Is iamlive still running
        run: ps aux | grep iamlive

  assert:
    name: Assert policy
    runs-on: ubuntu-22.04

    needs: [utilize]

    steps:
      - name: download-policy
        uses: actions/download-artifact@v3.0.0
        with:
          name: test-policy.json

      - name: check-policy
        run: |
          echo "assert policy has file"
          cat ./test-policy.json
          cat test-policy.json | grep 's3:CreateBucket'
          cat test-policy.json | grep 's3:ListAllMyBuckets'
